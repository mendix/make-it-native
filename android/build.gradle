// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        buildToolsVersion = "35.0.0"
        minSdkVersion = 24
        compileSdkVersion = 35
        targetSdkVersion = 35
        // needed by camera module
        googlePlayServicesVersion = "17+"
        androidXAnnotation = "1.2.0"
        androidXBrowser = "1.3.0"
        lifecycleVersion = "2.0.0"
        kotlinVersion = "1.9.24"
        nav_version = "2.8.3"
        androidx_core_version = "1.6.0"
        androidXBrowser = "1.2.0"
        excludeAppGlideModule = true
        androidx_lifecycle_version = "2.8.6"
        constraint_layout_version = "2.0.4"
        appcompat_version = "1.7.0"
        excludeAppGlideModule = true
        compose_version = "1.5.14"
        compose_ui_version = '1.7.4'
        camerax_version = "1.3.4"

        ndkVersion = "26.1.10909125"
    }

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.8.2"
        classpath "com.facebook.react:react-native-gradle-plugin"
        classpath "com.google.gms:google-services:4.4.2"
        classpath "de.undercouch:gradle-download-task:4.1.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'org.jetbrains.kotlin:compose-compiler-gradle-plugin:2.0.21'
        classpath "com.google.firebase:firebase-crashlytics-gradle:2.7.1"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.8.3"

        apply from: file("../node_modules/@mendix/native/androidlib/mendix.gradle"); applyMendixClassPaths(project)

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    tasks.withType(JavaCompile) {
            options.forkOptions.memoryMaximumSize = '512m'
    }

    tasks.withType(GroovyCompile) {
        groovyOptions.forkOptions.memoryMaximumSize = '512m'
    }
    // Uncomment the following line if Windows fails due to long paths
    // buildDir = c:/temp/${rootProject.name}/${project.name}
    repositories {
        all { ArtifactRepository repo ->
            if (repo.url.toString().contains("jcenter.bintray.com")) {
                remove repo
                mavenCentral()
            }
        }
        google()
        maven { url 'https://jitpack.io' }
    }
}

apply plugin: "com.facebook.react.rootproject"
