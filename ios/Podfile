source 'https://cdn.cocoapods.org/'

def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

# Explicitly disable new architecture until all dependencies are updated
ENV['RCT_NEW_ARCH_ENABLED'] = '0'

# Use it to require both react-native's and this package's scripts:
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

deployment_target = "15.5"
platform :ios, deployment_target
prepare_react_native_project!

setup_permissions([
  'Camera',
  'FaceID',
  'LocationWhenInUse',
  'Microphone',
  'PhotoLibrary',
  'Bluetooth',
  'MediaLibrary'
])

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

abstract_target "Mendix" do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )
  pod 'react-native-ble-plx', :path => '../node_modules/react-native-ble-plx'
  pod 'react-native-google-maps', :path => '../node_modules/react-native-maps'
  pod 'GoogleMaps'
  pod 'Google-Maps-iOS-Utils'
  # Required for Push notifications
  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true

  pod 'IQKeyboardManager'
  pod 'React-logger', :path => '../node_modules/react-native/ReactCommon/logger'
  pod 'SSZipArchive'
  
  target 'DeveloperApp' do
    # Comment the next line if you're not using Swift and don't want to use dynamic frameworks
    # use_frameworks!

    # Pods for DeveloperApp
    pod 'QRCodeReader.swift', '~> 10.1.0'
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )

    installer.pods_project.build_configurations.each do |config|
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['OTHER_LDFLAGS'] ||= ['$(inherited)']
      if config.name == "Debug"
        config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
      end
    end
  
    installer.pods_project.targets.each do |target|
      if target.name == 'Flipper'
        file_path = 'Pods/Flipper/xplat/Flipper/FlipperTransportTypes.h'
        contents = File.read(file_path)
        unless contents.include?('#include <functional>')
          File.open(file_path, 'w') do |file|
            file.puts('#include <functional>')
            file.puts(contents)
          end
        end
      end
      
      # Fix for SQLite duplicate header files - reliable approach
      if target.name == 'op_sqlite' || target.name.include?('SQLite')
        target.build_configurations.each do |config|
          config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
          config.build_settings['SKIP_INSTALL'] = 'NO'
          config.build_settings['DEFINES_MODULE'] = 'YES'
          config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
          
          # This setting specifically prevents duplicate header errors
          config.build_settings['HEADER_SEARCH_PATHS'] = '$(inherited) "${PODS_ROOT}/Headers/Private" "${PODS_ROOT}/Headers/Private/op_sqlite"'
        end
      end
    end

    # Enable React Native dev flags for all targets
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
        if target.name.start_with?("React") || target.name == "RCTTypeSafety"
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', "COCOAPODS=1", "RCT_DEV=1"]
        end

        # Specify 'Swift Version: 5.0' for resolving archieve errors.
        if target.name == 'react-native-video'
          config.build_settings['SWIFT_VERSION'] = '5.0'
        end
        if target.name == 'VisionCamera'
          config.build_settings['SWIFT_VERSION'] = '5.2'
        end
      end
    end
  
    # Ensure deployment_target is set correctly for all projects
    installer.generated_projects.each do |project|
      project.targets.each do |target|
        target.build_configurations.each do |config|
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = deployment_target
        end
      end
      project.build_configurations.each do |bc|
        bc.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = deployment_target
      end
    end
  end
end