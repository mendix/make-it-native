source 'https://cdn.cocoapods.org/'

def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

ENV['RCT_NEW_ARCH_ENABLED'] = '1'

# Use it to require both react-native's and this package's scripts:
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

deployment_target = "15.5"
platform :ios, deployment_target
prepare_react_native_project!

setup_permissions([
  'Camera',
  'FaceID',
  'LocationWhenInUse',
  'Microphone',
  'PhotoLibrary',
  'Bluetooth',
  'MediaLibrary'
])

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'DeveloperApp' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,
    :fabric_enabled => true,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )
  pod 'react-native-ble-plx', :path => '../node_modules/react-native-ble-plx'
  pod 'react-native-google-maps', :path => '../node_modules/react-native-maps'
  pod 'GoogleMaps'
  pod 'Google-Maps-iOS-Utils'
  # Required for Push notifications
  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true

  pod 'IQKeyboardManager'
  pod 'SSZipArchive'
  pod 'RNCAsyncStorage', :path=> "../node_modules/@react-native-async-storage/async-storage", :modular_headers => true
  pod 'QRCodeReader.swift', '~> 10.1.0'

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
    
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Specify 'Swift Version: 5.0' for resolving archieve errors.
        if target.name == 'react-native-video'
          config.build_settings['SWIFT_VERSION'] = '5.0'
        end
        if target.name == 'VisionCamera'
          config.build_settings['SWIFT_VERSION'] = '5.2'
        end
      end
    end
  
    # Ensure deployment_target is set correctly for all projects
    installer.generated_projects.each do |project|
        project.targets.each do |target|
            target.build_configurations.each do |config|
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = deployment_target
            end
        end
        project.build_configurations.each do |bc|
            bc.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = deployment_target
        end
    end
  end
end
